mod commands;

use tracel_xtask::prelude::*;

#[macro_use]
extern crate log;

#[macros::base_commands(
    Bump,
    Check,
    Compile,
    Coverage,
    Doc,
    Dependencies,
    Publish,
    Test,
    Validate,
    Vulnerabilities
)]
pub enum Command {
    /// Example of a new command with support of base Target
    NewCommand(commands::new_command::NewCommandCmdArgs),
    /// Example of extended Build command with an additional target called 'Frontend'
    Build(commands::build::ExtendedBuildCmdArgs),
    /// Comprehensive example of an extended Fix command with an additional target and subcommand
    Fix(commands::fix::ExtendedFixCmdArgs),
}

fn main() -> anyhow::Result<()> {
    let args = init_xtask::<Command>()?;
    match args.command {
        Command::Build(args) => commands::build::handle_command(args),
        Command::Fix(args) => commands::fix::handle_command(args, None),
        Command::NewCommand(args) => commands::new_command::handle_command(args),
        Command::Validate => commands::validate::handle_command(),
        // dispatch_base_commands function is generated by the commands macro
        _ => dispatch_base_commands(args),
    }?;
    Ok(())
}
